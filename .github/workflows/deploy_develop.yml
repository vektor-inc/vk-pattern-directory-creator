name: PHP Unit Test & Deploy develop
on:
    push:
        branches:
            - develop
    pull_request:
        branches:
            - develop
env:
    plugin_name: vk-pattern-directory-creator
jobs:
    php_unit:
        name: PHP Unit test ${{ matrix.php-versions }} / WP ${{ matrix.wp-versions }} Test on ${{ matrix.operating-system }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.0', '8.1', '8.2']
                wp-versions: ['6.5', '6.6', '6.7']

        services:
            mysql:
                image: mysql:5.7
                ports:
                    - 3306
                env:
                    MYSQL_ROOT_PASSWORD: wordpress
                    MYSQL_DATABASE: wordpress
                    MYSQL_USER: wordpress
                    MYSQL_PASSWORD: wordpress
        steps:
            - uses: actions/checkout@v3
            - name: Read .node-version
              run: echo "{NODEVERSION}={$(cat .node-version)}" >> $GITHUB_OUTPUT
              id: nodenv
            - name: Setup Node.js (.node-version)
              uses: actions/setup-node@v3
              with:
                  node-version: '${{ steps.nodenv.outputs.NODEVERSION }}'
            - name: Cache multiple paths
              uses: actions/cache@v3
              with:
                  path: vendor
                  key: ${{ runner.os }}-php${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
            - name: Setup PHP ${{ matrix.php-versions }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
            - name: install npm scripts
              run: npm install
            - name: Install Composer Packages
              run: composer install
            - name: Install WP-CLI
              run: |
                  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                  chmod +x wp-cli.phar
                  mv wp-cli.phar /usr/local/bin/wp
            - name: Build
              run: npm run build
            - name: Install Theme
              run: bash bin/install-theme.sh
            - name: Install several WordPress version by wp-env.override.json
              run: WP_ENV_PHP_VERSION=${{ matrix.php-versions }} WP_ENV_CORE=WordPress/WordPress#${{ matrix.wp-versions }} npm run wp-env start --update
            - name: Check WordPress Version
              run: npm run wp-env run cli wp core version
            - name: Start Environment
              run: npx wp-env start && sudo chmod -R 777 ~/wp-env
            - name: Run PHP Unit Test
              run: npm run phpunit

    # Deploy test server
    deploy:
        name: deploy to test server
        runs-on: ubuntu-latest
        needs: [php_unit]
        steps:
            - uses: actions/checkout@v2
            # get the node version from the .node-version file
            - name: Read .node-version
              run: echo "##[set-output name=NODEVERSION;]$(cat .node-version)"
              id: nodenv

            # setup node based on the version from the .node-version file, fetched in the previous step
            - name: Setup Node.js (.node-version)
              uses: actions/setup-node@v1
              with:
                  node-version: '${{ steps.nodenv.outputs.NODEVERSION }}'
            # ビルドで翻訳処理があるため wp-env が必要
            - name: Setup PHP 8.1
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
            - name: install npm scripts
              run: npm install
            - name: Install Composer Packages
              run: composer install
            - name: Install WP-CLI
              run: |
                  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                  chmod +x wp-cli.phar
                  mv wp-cli.phar /usr/local/bin/wp
            - name: Build
              run: npm run build
            - name: Make Distribution
              run: bash bin/deploy.sh
            - name: Deploy to test server
              uses: burnett01/rsync-deployments@4.1
              with:
                  switches: -avzr
                  path: /dist/${{ env.plugin_name }}/
                  remote_path: /home/vs4/www/pdc.vs4.nagoya/wp-content/plugins/${{ env.plugin_name }}/
                  remote_host: ${{ secrets.DEPLOY_HOST_VS4 }}
                  remote_port: ${{ secrets.DEPLOY_PORT_VS4 }}
                  remote_user: ${{ secrets.DEPLOY_USER_VS4 }}
                  remote_key: ${{ secrets.DEPLOY_KEY_VS4 }}
